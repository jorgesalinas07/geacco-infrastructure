name: General CD

on:
  push:
    branches:
      - main

jobs:
  build-geacco-cd:
    runs-on: ubuntu-22.04

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Deploy Docker BASE
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          BASE_ECR_TAG: ${{ github.sha }}
        run: |
          make build_and_deploy_image ECR_NAME=geacco_app ENVIRONMENT_SUFFIX=_stg ECR_TAG=$BASE_ECR_TAG ECR_REGISTRY=$REGISTRY

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./${{ env.WORKING_DIR }}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./${{ env.WORKING_DIR }}

      - name: Select Terraform Workspace
        id: workspace
        run: terraform workspace select stg
        working-directory: ./${{ env.WORKING_DIR }}

      - name: Terraform Plan
        id: plan
        env:
          TF_VAR_IMAGE_TAG: ${{ github.sha }}
        run: terraform plan -no-color -input=false
        working-directory: ./${{ env.WORKING_DIR }}
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        env:
          TF_VAR_IMAGE_TAG: ${{ github.sha }}
        run: terraform apply -auto-approve -input=false
        working-directory: ./${{ env.WORKING_DIR }}
