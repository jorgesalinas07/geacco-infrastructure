
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_alb_target_group_attachment.base_project_alb_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_alb_target_group_attachment" "base_project_alb_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtarget_group_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtarget_id[0m[0m        = (known after apply)
    }

[1m  # aws_db_instance.geacco_db_instance[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_db_instance" "geacco_db_instance" {
      [32m+[0m [0m[1m[0maddress[0m[0m                               = (known after apply)
      [32m+[0m [0m[1m[0mallocated_storage[0m[0m                     = 10
      [32m+[0m [0m[1m[0mapply_immediately[0m[0m                     = false
      [32m+[0m [0m[1m[0marn[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0mauto_minor_version_upgrade[0m[0m            = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mbackup_retention_period[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mbackup_target[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mbackup_window[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mca_cert_identifier[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcharacter_set_name[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcopy_tags_to_snapshot[0m[0m                 = false
      [32m+[0m [0m[1m[0mdb_name[0m[0m                               = "geacco_db_stg"
      [32m+[0m [0m[1m[0mdb_subnet_group_name[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mdelete_automated_backups[0m[0m              = true
      [32m+[0m [0m[1m[0mendpoint[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mengine[0m[0m                                = "postgres"
      [32m+[0m [0m[1m[0mengine_version[0m[0m                        = "14.3"
      [32m+[0m [0m[1m[0mengine_version_actual[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mhosted_zone_id[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0midentifier[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0midentifier_prefix[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0minstance_class[0m[0m                        = "db.t2.micro"
      [32m+[0m [0m[1m[0miops[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mlatest_restorable_time[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mlicense_model[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mlistener_endpoint[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mmaintenance_window[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmaster_user_secret[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmaster_user_secret_kms_key_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring_interval[0m[0m                   = 0
      [32m+[0m [0m[1m[0mmonitoring_role_arn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mmulti_az[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mnchar_character_set_name[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_type[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0moption_group_name[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mparameter_group_name[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mpassword[0m[0m                              = (sensitive value)
      [32m+[0m [0m[1m[0mperformance_insights_enabled[0m[0m          = false
      [32m+[0m [0m[1m[0mperformance_insights_kms_key_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mperformance_insights_retention_period[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mport[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mpublicly_accessible[0m[0m                   = false
      [32m+[0m [0m[1m[0mreplica_mode[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mreplicas[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mresource_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mskip_final_snapshot[0m[0m                   = true
      [32m+[0m [0m[1m[0msnapshot_identifier[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mstatus[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mstorage_throughput[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mstorage_type[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mtimezone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0musername[0m[0m                              = (sensitive)
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m                = (known after apply)
    }

[1m  # aws_db_subnet_group.geacco_db_subnet_group[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_db_subnet_group" "geacco_db_subnet_group" {
      [32m+[0m [0m[1m[0marn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m             = "Managed by Terraform"
      [32m+[0m [0m[1m[0mid[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                    = "geacco_app_db_subnet_group_stg"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0msubnet_ids[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0msupported_network_types[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                    = {
          [32m+[0m [0m"Name" = "geacco_app_db_subnet_group_stg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                = {
          [32m+[0m [0m"Name" = "geacco_app_db_subnet_group_stg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                  = (known after apply)
    }

[1m  # aws_eip.geacco_EC2_eip[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eip" "geacco_EC2_eip" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0massociation_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mcarrier_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ip[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdomain[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0minstance[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ipv4_pool[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                 = {
          [32m+[0m [0m"Name" = "geacco_EC2_instance_stg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m             = {
          [32m+[0m [0m"Name" = "geacco_EC2_instance_stg"
        }
      [32m+[0m [0m[1m[0mvpc[0m[0m                  = true
    }

[1m  # aws_iam_instance_profile.base_project_repository_intance_profile[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "base_project_repository_intance_profile" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mcreate_date[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mrole[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m   = (known after apply)
    }

[1m  # aws_iam_role.base_project_repository_role[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "base_project_repository_role" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "ec2.amazonaws.com"
                        }
                      [32m+[0m [0mSid       = ""
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.base_project_repository_attachment[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "base_project_repository_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      [32m+[0m [0m[1m[0mrole[0m[0m       = (known after apply)
    }

[1m  # aws_instance.base_project_EC2_instance[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "base_project_EC2_instance" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-0a3db6a6bb59b68d3"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mhost_resource_group_arn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_lifecycle[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t2.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = "geacco_app_kp_stg"
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0mspot_instance_request_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = {
          [32m+[0m [0m"Name" = "geacco_EC2_instance_stg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = {
          [32m+[0m [0m"Name" = "geacco_EC2_instance_stg"
        }
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = "IyEgL2Jpbi9iYXNoCnNldCAtZQojIE91cHV0IGFsbCBsb2cKZXhlYyA+ID4odGVlIC92YXIvbG9nL3VzZXItZGF0YS5sb2d8bG9nZ2VyIC10IHVzZXItZGF0YSAtcyAyPi9kZXYvY29uc29sZSkgMj4mMQojIE1ha2Ugc3VyZSB3ZSBoYXZlIGFsbCB0aGUgbGF0ZXN0IHVwZGF0ZXMgd2hlbiB3ZSBsYXVuY2ggdGhpcyBpbnN0YW5jZQp5dW0gdXBkYXRlIC15ICYmIHl1bSB1cGdyYWRlIC15CiMgSW5zdGFsbCBjb21wb25lbnRzCnl1bSBpbnN0YWxsIC15IGRvY2tlciBhbWF6b24tZWNyLWNyZWRlbnRpYWwtaGVscGVyCiMgQWRkIGNyZWRlbnRpYWwgaGVscGVyIHRvIHB1bGwgZnJvbSBFQ1IKbWtkaXIgLXAgfi8uZG9ja2VyICYmIGNobW9kIDA3MDAgfi8uZG9ja2VyCmVjaG8gJ3siY3JlZHNTdG9yZSI6ICJlY3ItbG9naW4ifScgPiB+Ly5kb2NrZXIvY29uZmlnLmpzb24KIyBTdGFydCBkb2NrZXIgbm93IGFuZCBlbmFibGUgYXV0byBzdGFydCBvbiBib290CnNlcnZpY2UgZG9ja2VyIHN0YXJ0ICYmIGNoa2NvbmZpZyBkb2NrZXIgb24KIyBBbGxvdyB0aGUgZWMyLXVzZXIgdG8gcnVuIGRvY2tlciBjb21tYW5kcyB3aXRob3V0IHN1ZG8KdXNlcm1vZCAtYSAtRyBkb2NrZXIgZWMyLXVzZXIKIyBSdW4gYXBwbGljYXRpb24gYXQgc3RhcnQKZG9ja2VyIHJ1biAtLXJlc3RhcnQ9YWx3YXlzIC1kIC1wIDgwOjUwMDAgMzg4ODEzMTc2Mzc3LmRrci5lY3IudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20vZ2VhY2NvX2FwcF9zdGc6bGF0ZXN0Cg=="
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mcpu_options {
          [32m+[0m [0m[1m[0mamd_sev_snp[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcore_count[0m[0m       = (known after apply)
          [32m+[0m [0m[1m[0mthreads_per_core[0m[0m = (known after apply)
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0minstance_market_options {
          [32m+[0m [0m[1m[0mmarket_type[0m[0m = (known after apply)

          [32m+[0m [0mspot_options {
              [32m+[0m [0m[1m[0minstance_interruption_behavior[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mmax_price[0m[0m                      = (known after apply)
              [32m+[0m [0m[1m[0mspot_instance_type[0m[0m             = (known after apply)
              [32m+[0m [0m[1m[0mvalid_until[0m[0m                    = (known after apply)
            }
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # aws_internet_gateway.base_project_gw[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_internet_gateway" "base_project_gw" {
      [32m+[0m [0m[1m[0marn[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m     = {
          [32m+[0m [0m"Name" = "geacco_app_internet_gateway_stg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m = {
          [32m+[0m [0m"Name" = "geacco_app_internet_gateway_stg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m   = (known after apply)
    }

[1m  # aws_key_pair.geacco_app_kp[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_key_pair" "geacco_app_kp" {
      [32m+[0m [0m[1m[0marn[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mfingerprint[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m        = "geacco_app_kp_stg"
      [32m+[0m [0m[1m[0mkey_name_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mkey_pair_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_type[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key[0m[0m      = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/pqGTI75SIyEnFDXSKR8ryMGTNosQjZyITELH5Xg//WmOL0jVzgGmleBN3zIbeg9ri4gKdXtRANiOWacl7lcSZmlAMdF0NcohVzF8wKzusMQCcQPSLsZA25Ho6yBpHioAWEn8oNQuqBjs9//ierpq3O68MLExbvQ0VbNbi5Qsm+WJ1gfzbKWv/WnAnwQzojo2a9xFpH08+zr/JYlxWtpD3wn4Xigi9NxLpzNw9/nkUWIg5R9smx5/s3tcUQPwaRGXtcijU1TFP8nqrTAPiqoUFlRMWNeCYmF2j779WbmMZcnUjiOelOkWn1ZgPYMbHrx9xr8ovWXyzewzGQ8cBNL+1UAQG9fNOLO7ZkLdXx7rgJ2hRKy4UneY/LS7bBmrsFsyJYt53X8hLN90NjH3Tgvk8Ynihvx+LczQ1ZrIS3lDt3RJ0PuhVh/Hl8NKN0wi3LFpBs77RJd2JO9vaLcl7CUpiVNeLVgeuN52Pn+WfT+KgI4q2xw64Dn1gZV1PTHk+sbbgLwMVDEfbGDFq3U5sxhp62kKkLqBN59hwQFiLtt2Q0CK9x6xwSW31DUNOi8RzTHVdUR6CyJB53naRJWOCiA/HHdyWe+JFqhwFU7OTeTUDQiPyzgnsgANmGiq0K+YDEpC4lnJvgWgshVbVDtI99j6YlaVhTSMvs0lhMEgrneXIQ== jorge@jorge-HP-Laptop-15-ef2xxx"
      [32m+[0m [0m[1m[0mtags_all[0m[0m        = (known after apply)
    }

[1m  # aws_lb.base_project_alb[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb" "base_project_alb" {
      [32m+[0m [0m[1m[0marn[0m[0m                                         = (known after apply)
      [32m+[0m [0m[1m[0marn_suffix[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mdesync_mitigation_mode[0m[0m                      = "defensive"
      [32m+[0m [0m[1m[0mdns_name[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mdrop_invalid_header_fields[0m[0m                  = false
      [32m+[0m [0m[1m[0menable_deletion_protection[0m[0m                  = false
      [32m+[0m [0m[1m[0menable_http2[0m[0m                                = true
      [32m+[0m [0m[1m[0menable_tls_version_and_cipher_suite_headers[0m[0m = false
      [32m+[0m [0m[1m[0menable_waf_fail_open[0m[0m                        = false
      [32m+[0m [0m[1m[0menable_xff_client_port[0m[0m                      = false
      [32m+[0m [0m[1m[0mid[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0midle_timeout[0m[0m                                = 60
      [32m+[0m [0m[1m[0minternal[0m[0m                                    = false
      [32m+[0m [0m[1m[0mip_address_type[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mload_balancer_type[0m[0m                          = "application"
      [32m+[0m [0m[1m[0mname[0m[0m                                        = "geacco-ALB"
      [32m+[0m [0m[1m[0mpreserve_host_header[0m[0m                        = false
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0msubnets[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                      = (known after apply)
      [32m+[0m [0m[1m[0mxff_header_processing_mode[0m[0m                  = "append"
      [32m+[0m [0m[1m[0mzone_id[0m[0m                                     = (known after apply)

      [32m+[0m [0msubnet_mapping {
          [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0mipv6_address[0m[0m         = (known after apply)
          [32m+[0m [0m[1m[0moutpost_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mprivate_ipv4_address[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0msubnet_id[0m[0m            = (known after apply)
        }
    }

[1m  # aws_lb_listener.base_project_alb_listener[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb_listener" "base_project_alb_listener" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mload_balancer_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mport[0m[0m              = 443
      [32m+[0m [0m[1m[0mprotocol[0m[0m          = "HTTP"
      [32m+[0m [0m[1m[0mssl_policy[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m          = (known after apply)

      [32m+[0m [0mdefault_action {
          [32m+[0m [0m[1m[0morder[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m  = "redirect"

          [32m+[0m [0mredirect {
              [32m+[0m [0m[1m[0mhost[0m[0m        = "#{host}"
              [32m+[0m [0m[1m[0mpath[0m[0m        = "/#{path}"
              [32m+[0m [0m[1m[0mport[0m[0m        = "443"
              [32m+[0m [0m[1m[0mprotocol[0m[0m    = "HTTPS"
              [32m+[0m [0m[1m[0mquery[0m[0m       = "#{query}"
              [32m+[0m [0m[1m[0mstatus_code[0m[0m = "HTTP_301"
            }
        }
    }

[1m  # aws_lb_listener_rule.base_project_alb_listener_rule[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb_listener_rule" "base_project_alb_listener_rule" {
      [32m+[0m [0m[1m[0marn[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mlistener_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpriority[0m[0m     = 100
      [32m+[0m [0m[1m[0mtags_all[0m[0m     = (known after apply)

      [32m+[0m [0maction {
          [32m+[0m [0m[1m[0morder[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtarget_group_arn[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m             = "forward"
        }

      [32m+[0m [0mcondition {

          [32m+[0m [0mpath_pattern {
              [32m+[0m [0m[1m[0mvalues[0m[0m = [
                  [32m+[0m [0m"/var/www/html/index.html",
                ]
            }
        }
    }

[1m  # aws_lb_target_group.base_project_alb_target_group[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb_target_group" "base_project_alb_target_group" {
      [32m+[0m [0m[1m[0marn[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0marn_suffix[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mconnection_termination[0m[0m             = false
      [32m+[0m [0m[1m[0mderegistration_delay[0m[0m               = "300"
      [32m+[0m [0m[1m[0mid[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mip_address_type[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mlambda_multi_value_headers_enabled[0m[0m = false
      [32m+[0m [0m[1m[0mload_balancing_algorithm_type[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mload_balancing_cross_zone_enabled[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                               = "geacco-alb-target-group"
      [32m+[0m [0m[1m[0mport[0m[0m                               = 80
      [32m+[0m [0m[1m[0mpreserve_client_ip[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                           = "HTTP"
      [32m+[0m [0m[1m[0mprotocol_version[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mproxy_protocol_v2[0m[0m                  = false
      [32m+[0m [0m[1m[0mslow_start[0m[0m                         = 0
      [32m+[0m [0m[1m[0mtags_all[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mtarget_type[0m[0m                        = "instance"
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                             = (known after apply)

      [32m+[0m [0mhealth_check {
          [32m+[0m [0m[1m[0menabled[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mhealthy_threshold[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0minterval[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mmatcher[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mpath[0m[0m                = (known after apply)
          [32m+[0m [0m[1m[0mport[0m[0m                = (known after apply)
          [32m+[0m [0m[1m[0mprotocol[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtimeout[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0munhealthy_threshold[0m[0m = (known after apply)
        }

      [32m+[0m [0mstickiness {
          [32m+[0m [0m[1m[0mcookie_duration[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mcookie_name[0m[0m     = (known after apply)
          [32m+[0m [0m[1m[0menabled[0m[0m         = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m            = (known after apply)
        }

      [32m+[0m [0mtarget_failover {
          [32m+[0m [0m[1m[0mon_deregistration[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mon_unhealthy[0m[0m      = (known after apply)
        }
    }

[1m  # aws_route_table.base_project_alb_route_table[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "base_project_alb_route_table" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = [
          [32m+[0m [0m{
              [32m+[0m [0mcarrier_gateway_id         = ""
              [32m+[0m [0mcidr_block                 = "0.0.0.0/0"
              [32m+[0m [0mcore_network_arn           = ""
              [32m+[0m [0mdestination_prefix_list_id = ""
              [32m+[0m [0megress_only_gateway_id     = ""
              [32m+[0m [0mgateway_id                 = (known after apply)
              [32m+[0m [0mipv6_cidr_block            = ""
              [32m+[0m [0mlocal_gateway_id           = ""
              [32m+[0m [0mnat_gateway_id             = ""
              [32m+[0m [0mnetwork_interface_id       = ""
              [32m+[0m [0mtransit_gateway_id         = ""
              [32m+[0m [0mvpc_endpoint_id            = ""
              [32m+[0m [0mvpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Name" = "geacco_app_bucket_route_table_stg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = {
          [32m+[0m [0m"Name" = "geacco_app_bucket_route_table_stg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # aws_route_table.base_project_bucket_route_table[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "base_project_bucket_route_table" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = [
          [32m+[0m [0m{
              [32m+[0m [0mcarrier_gateway_id         = ""
              [32m+[0m [0mcidr_block                 = "0.0.0.0/0"
              [32m+[0m [0mcore_network_arn           = ""
              [32m+[0m [0mdestination_prefix_list_id = ""
              [32m+[0m [0megress_only_gateway_id     = ""
              [32m+[0m [0mgateway_id                 = (known after apply)
              [32m+[0m [0mipv6_cidr_block            = ""
              [32m+[0m [0mlocal_gateway_id           = ""
              [32m+[0m [0mnat_gateway_id             = ""
              [32m+[0m [0mnetwork_interface_id       = ""
              [32m+[0m [0mtransit_gateway_id         = ""
              [32m+[0m [0mvpc_endpoint_id            = ""
              [32m+[0m [0mvpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Name" = "geacco_app_bucket_route_table_stg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = {
          [32m+[0m [0m"Name" = "geacco_app_bucket_route_table_stg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # aws_route_table.base_project_cloud_route_table[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "base_project_cloud_route_table" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = [
          [32m+[0m [0m{
              [32m+[0m [0mcarrier_gateway_id         = ""
              [32m+[0m [0mcidr_block                 = "0.0.0.0/0"
              [32m+[0m [0mcore_network_arn           = ""
              [32m+[0m [0mdestination_prefix_list_id = ""
              [32m+[0m [0megress_only_gateway_id     = ""
              [32m+[0m [0mgateway_id                 = (known after apply)
              [32m+[0m [0mipv6_cidr_block            = ""
              [32m+[0m [0mlocal_gateway_id           = ""
              [32m+[0m [0mnat_gateway_id             = ""
              [32m+[0m [0mnetwork_interface_id       = ""
              [32m+[0m [0mtransit_gateway_id         = ""
              [32m+[0m [0mvpc_endpoint_id            = ""
              [32m+[0m [0mvpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Name" = "geacco_app_cloud_route_table_stg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = {
          [32m+[0m [0m"Name" = "geacco_app_cloud_route_table_stg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # aws_route_table.base_project_db_route_table[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "base_project_db_route_table" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Name" = "geacco_app_db_table_stg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = {
          [32m+[0m [0m"Name" = "geacco_app_db_table_stg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # aws_route_table.base_project_repository_route_table[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "base_project_repository_route_table" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = [
          [32m+[0m [0m{
              [32m+[0m [0mcarrier_gateway_id         = ""
              [32m+[0m [0mcidr_block                 = "0.0.0.0/0"
              [32m+[0m [0mcore_network_arn           = ""
              [32m+[0m [0mdestination_prefix_list_id = ""
              [32m+[0m [0megress_only_gateway_id     = ""
              [32m+[0m [0mgateway_id                 = (known after apply)
              [32m+[0m [0mipv6_cidr_block            = ""
              [32m+[0m [0mlocal_gateway_id           = ""
              [32m+[0m [0mnat_gateway_id             = ""
              [32m+[0m [0mnetwork_interface_id       = ""
              [32m+[0m [0mtransit_gateway_id         = ""
              [32m+[0m [0mvpc_endpoint_id            = ""
              [32m+[0m [0mvpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Name" = "geacco_app_repository_route_table_stg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = {
          [32m+[0m [0m"Name" = "geacco_app_repository_route_table_stg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # aws_route_table_association.base_project_alb_route_table_association[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "base_project_alb_route_table_association" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # aws_route_table_association.base_project_bucket_route_table_association[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "base_project_bucket_route_table_association" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # aws_route_table_association.base_project_cloud_route_table_association[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "base_project_cloud_route_table_association" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # aws_route_table_association.base_project_db_route_table_association[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "base_project_db_route_table_association" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # aws_route_table_association.base_project_db_route_table_association[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "base_project_db_route_table_association" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # aws_route_table_association.base_project_repository_route_table_association[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "base_project_repository_route_table_association" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # aws_s3_bucket.geacco_app_bucket[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket" "geacco_app_bucket" {
      [32m+[0m [0m[1m[0macceleration_status[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0macl[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mbucket[0m[0m                      = "geacco-app-bucket-79eb25"
      [32m+[0m [0m[1m[0mbucket_domain_name[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mbucket_prefix[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mbucket_regional_domain_name[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m               = false
      [32m+[0m [0m[1m[0mhosted_zone_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mregion[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mrequest_payer[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                        = {
          [32m+[0m [0m"Name" = "geacco_app_bucket_stg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                    = {
          [32m+[0m [0m"Name" = "geacco_app_bucket_stg"
        }
      [32m+[0m [0m[1m[0mwebsite_domain[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mwebsite_endpoint[0m[0m            = (known after apply)

      [32m+[0m [0mcors_rule {
          [32m+[0m [0m[1m[0mallowed_headers[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_methods[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_origins[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mexpose_headers[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mmax_age_seconds[0m[0m = (known after apply)
        }

      [32m+[0m [0mgrant {
          [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mpermissions[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0muri[0m[0m         = (known after apply)
        }

      [32m+[0m [0mlifecycle_rule {
          [32m+[0m [0m[1m[0mabort_incomplete_multipart_upload_days[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0menabled[0m[0m                                = (known after apply)
          [32m+[0m [0m[1m[0mid[0m[0m                                     = (known after apply)
          [32m+[0m [0m[1m[0mprefix[0m[0m                                 = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                                   = (known after apply)

          [32m+[0m [0mexpiration {
              [32m+[0m [0m[1m[0mdate[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mdays[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mexpired_object_delete_marker[0m[0m = (known after apply)
            }

          [32m+[0m [0mnoncurrent_version_expiration {
              [32m+[0m [0m[1m[0mdays[0m[0m = (known after apply)
            }

          [32m+[0m [0mnoncurrent_version_transition {
              [32m+[0m [0m[1m[0mdays[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mstorage_class[0m[0m = (known after apply)
            }

          [32m+[0m [0mtransition {
              [32m+[0m [0m[1m[0mdate[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mdays[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mstorage_class[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mlogging {
          [32m+[0m [0m[1m[0mtarget_bucket[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtarget_prefix[0m[0m = (known after apply)
        }

      [32m+[0m [0mobject_lock_configuration {
          [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m = (known after apply)

          [32m+[0m [0mrule {
              [32m+[0m [0mdefault_retention {
                  [32m+[0m [0m[1m[0mdays[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0mmode[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0myears[0m[0m = (known after apply)
                }
            }
        }

      [32m+[0m [0mreplication_configuration {
          [32m+[0m [0m[1m[0mrole[0m[0m = (known after apply)

          [32m+[0m [0mrules {
              [32m+[0m [0m[1m[0mdelete_marker_replication_status[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mid[0m[0m                               = (known after apply)
              [32m+[0m [0m[1m[0mprefix[0m[0m                           = (known after apply)
              [32m+[0m [0m[1m[0mpriority[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mstatus[0m[0m                           = (known after apply)

              [32m+[0m [0mdestination {
                  [32m+[0m [0m[1m[0maccount_id[0m[0m         = (known after apply)
                  [32m+[0m [0m[1m[0mbucket[0m[0m             = (known after apply)
                  [32m+[0m [0m[1m[0mreplica_kms_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mstorage_class[0m[0m      = (known after apply)

                  [32m+[0m [0maccess_control_translation {
                      [32m+[0m [0m[1m[0mowner[0m[0m = (known after apply)
                    }

                  [32m+[0m [0mmetrics {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }

                  [32m+[0m [0mreplication_time {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }
                }

              [32m+[0m [0mfilter {
                  [32m+[0m [0m[1m[0mprefix[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mtags[0m[0m   = (known after apply)
                }

              [32m+[0m [0msource_selection_criteria {
                  [32m+[0m [0msse_kms_encrypted_objects {
                      [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
                    }
                }
            }
        }

      [32m+[0m [0mserver_side_encryption_configuration {
          [32m+[0m [0mrule {
              [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m = (known after apply)

              [32m+[0m [0mapply_server_side_encryption_by_default {
                  [32m+[0m [0m[1m[0mkms_master_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0msse_algorithm[0m[0m     = (known after apply)
                }
            }
        }

      [32m+[0m [0mversioning {
          [32m+[0m [0m[1m[0menabled[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mmfa_delete[0m[0m = (known after apply)
        }

      [32m+[0m [0mwebsite {
          [32m+[0m [0m[1m[0merror_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mindex_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mredirect_all_requests_to[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mrouting_rules[0m[0m            = (known after apply)
        }
    }

[1m  # aws_s3_bucket_server_side_encryption_configuration.geacco_app_encryption_configuration[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket_server_side_encryption_configuration" "geacco_app_encryption_configuration" {
      [32m+[0m [0m[1m[0mbucket[0m[0m = "geacco-app-bucket-79eb25"
      [32m+[0m [0m[1m[0mid[0m[0m     = (known after apply)

      [32m+[0m [0mrule {
          [32m+[0m [0mapply_server_side_encryption_by_default {
              [32m+[0m [0m[1m[0msse_algorithm[0m[0m = "AES256"
            }
        }
    }

[1m  # aws_s3_bucket_versioning.geacco_app_bucket_versioning[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket_versioning" "geacco_app_bucket_versioning" {
      [32m+[0m [0m[1m[0mbucket[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m     = (known after apply)

      [32m+[0m [0mversioning_configuration {
          [32m+[0m [0m[1m[0mmfa_delete[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mstatus[0m[0m     = "Enabled"
        }
    }

[1m  # aws_security_group.ALB_security_group[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "ALB_security_group" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "A security group for the ALB database"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = "Allow ALB traffic from the web only"
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = [
                  [32m+[0m [0m"::/0",
                ]
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (sensitive)
      [32m+[0m [0m[1m[0mname[0m[0m                   = "ALB_security_group_stg"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Name" = "geacco_app_alb_security_group_stg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Name" = "geacco_app_alb_security_group_stg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # aws_security_group.EC2_security_group[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "EC2_security_group" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "A security group for the EC2 instance"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = "Allow all outbound traffic"
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (sensitive)
      [32m+[0m [0m[1m[0mname[0m[0m                   = "EC2_security_group_stg"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Name" = "geacco_app_ec2_security_group_stg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Name" = "geacco_app_ec2_security_group_stg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # aws_security_group.ECR_security_group[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "ECR_security_group" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "A security group for the ECR database"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = "Allow ECR traffic from the web only"
              [32m+[0m [0mfrom_port        = 3306
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = (known after apply)
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 3306
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = "ECR_security_group_stg"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Name" = "geacco_app_ecr_security_group_stg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Name" = "geacco_app_ecr_security_group_stg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # aws_security_group.RDS_security_group[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "RDS_security_group" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "A security group for the RDS database"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = "Allow RDS traffic from the web only"
              [32m+[0m [0mfrom_port        = 3306
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = (known after apply)
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 3306
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = "RDS_security_group_stg"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Name" = "geacco_app_rds_security_group_stg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Name" = "geacco_app_rds_security_group_stg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # aws_security_group.S3_security_group[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "S3_security_group" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "A security group for the S3 database"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = "Allow S3 traffic from the web only"
              [32m+[0m [0mfrom_port        = 3306
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = (known after apply)
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 3306
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = "S3_security_group_stg"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Name" = "geacco_app_s3_security_group_stg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Name" = "geacco_app_s3_security_group_stg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # aws_subnet.base_project_cloud_subnet[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "base_project_cloud_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "available"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.1.0/24"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name" = "geacco_app_cloud_subnet_stg_0"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name" = "geacco_app_cloud_subnet_stg_0"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # aws_subnet.base_project_db_subnet[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "base_project_db_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "available"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.1.0/24"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name" = "geacco_app_db_subnet_stg_0"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name" = "geacco_app_db_subnet_stg_0"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # aws_subnet.base_project_db_subnet[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "base_project_db_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "available"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.1.0/24"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name" = "geacco_app_db_subnet_stg_1"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name" = "geacco_app_db_subnet_stg_1"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # aws_vpc.base_project_VPC[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc" "base_project_VPC" {
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                           = "10.0.0.0/16"
      [32m+[0m [0m[1m[0mdefault_network_acl_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_route_table_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_security_group_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mdhcp_options_id[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0menable_dns_hostnames[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns_support[0m[0m                   = true
      [32m+[0m [0m[1m[0menable_network_address_usage_metrics[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_tenancy[0m[0m                     = "default"
      [32m+[0m [0m[1m[0mipv6_association_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_network_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mmain_route_table_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = {
          [32m+[0m [0m"Name" = "geacco_app_vpc_stg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = {
          [32m+[0m [0m"Name" = "geacco_app_vpc_stg"
        }
    }

[1m  # aws_vpc_endpoint.ecr_endpoint[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "ecr_endpoint" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mdns_entry[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mip_address_type[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_ids[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_enabled[0m[0m   = false
      [32m+[0m [0m[1m[0mrequester_managed[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_ids[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mservice_name[0m[0m          = "com.amazonaws.us-east-1.s3"
      [32m+[0m [0m[1m[0mstate[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0msubnet_ids[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mvpc_endpoint_type[0m[0m     = "Gateway"
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                = (known after apply)

      [32m+[0m [0mdns_options {
          [32m+[0m [0m[1m[0mdns_record_ip_type[0m[0m                             = (known after apply)
          [32m+[0m [0m[1m[0mprivate_dns_only_for_inbound_resolver_endpoint[0m[0m = (known after apply)
        }
    }

[1m  # aws_vpc_endpoint.s3_endpoint[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "s3_endpoint" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mdns_entry[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mip_address_type[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_ids[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_enabled[0m[0m   = false
      [32m+[0m [0m[1m[0mrequester_managed[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_ids[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mservice_name[0m[0m          = "com.amazonaws.us-east-1.s3"
      [32m+[0m [0m[1m[0mstate[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0msubnet_ids[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mvpc_endpoint_type[0m[0m     = "Gateway"
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                = (known after apply)

      [32m+[0m [0mdns_options {
          [32m+[0m [0m[1m[0mdns_record_ip_type[0m[0m                             = (known after apply)
          [32m+[0m [0m[1m[0mprivate_dns_only_for_inbound_resolver_endpoint[0m[0m = (known after apply)
        }
    }

[1m  # aws_vpc_endpoint_route_table_association.base_project_bucket_endpoint_route_table_association[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc_endpoint_route_table_association" "base_project_bucket_endpoint_route_table_association" {
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mvpc_endpoint_id[0m[0m = (known after apply)
    }

[1m  # aws_vpc_endpoint_route_table_association.base_project_repository_endpoint_route_table_association[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc_endpoint_route_table_association" "base_project_repository_endpoint_route_table_association" {
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mvpc_endpoint_id[0m[0m = (known after apply)
    }

[1m  # module.base_project_ECR.aws_ecr_lifecycle_policy.ecr_retain_5_images[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_ecr_lifecycle_policy" "ecr_retain_5_images" {
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mrules = [
                  [32m+[0m [0m{
                      [32m+[0m [0maction       = {
                          [32m+[0m [0mtype = "expire"
                        }
                      [32m+[0m [0mdescription  = "Keep last 2 images"
                      [32m+[0m [0mrulePriority = 1
                      [32m+[0m [0mselection    = {
                          [32m+[0m [0mcountNumber = 2
                          [32m+[0m [0mcountType   = "imageCountMoreThan"
                          [32m+[0m [0mtagStatus   = "any"
                        }
                    },
                ]
            }
        )
      [32m+[0m [0m[1m[0mregistry_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrepository[0m[0m  = "geacco_app_stg"
    }

[1m  # module.base_project_ECR.aws_ecr_repository.ecr[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_ecr_repository" "ecr" {
      [32m+[0m [0m[1m[0marn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mimage_tag_mutability[0m[0m = "IMMUTABLE"
      [32m+[0m [0m[1m[0mname[0m[0m                 = "geacco_app_stg"
      [32m+[0m [0m[1m[0mregistry_id[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mrepository_url[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m             = (known after apply)

      [32m+[0m [0mimage_scanning_configuration {
          [32m+[0m [0m[1m[0mscan_on_push[0m[0m = true
        }
    }

[0m[1mPlan:[0m 43 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mbase_ecr_ui[0m[0m       = (known after apply)
  [32m+[0m [0m[1m[0mdatabase_endpoint[0m[0m = (known after apply)
  [32m+[0m [0m[1m[0mdatabase_port[0m[0m     = (known after apply)
  [32m+[0m [0m[1m[0mweb_public_dns[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0mweb_public_ip[0m[0m     = (known after apply)
[33m╷[0m[0m
[33m│[0m [0m[1m[33mWarning: [0m[0m[1mArgument is deprecated[0m
[33m│[0m [0m
[33m│[0m [0m[0m  with aws_eip.geacco_EC2_eip,
[33m│[0m [0m  on cloud.tf line 119, in resource "aws_eip" "geacco_EC2_eip":
[33m│[0m [0m 119:   vpc = [4mtrue[0m[0m
[33m│[0m [0m
[33m│[0m [0muse domain attribute instead
[33m│[0m [0m
[33m│[0m [0m(and one more similar warning elsewhere)
[33m╵[0m[0m
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
